<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Music</title>
  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.3.0/fonts/remixicon.css" rel="stylesheet" />
  <link rel="stylesheet" href="/stylesheets/style.css">
</head>
<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: sans-serif;
  }

  html,
  body {
    width: 100%;
    height: 100%;
  }

  .main-edit-page {
    backdrop-filter: blur(9px) saturate(133%);
    -webkit-backdrop-filter: blur(15px) saturate(133%);
    background-color: rgba(42, 164, 120, 0.1);
  }

  .select-playlist {
    border-radius: 0px;
    background: #282828;
    box-shadow: 10px 10px 20px #202020,
      -10px -10px 20px #202020;
  }
</style>

<body class="bg-black h-screen text-gray-900 overflow-hidden">
  <div class="h-screen overflow-auto">
    <% playlists.forEach((playlist, index)=> { %>

      <!-- Playlist Container -->
      <% if(playlist) { %>
        <div class="max-w-4xl mx-auto my-10 p-6 rounded-lg shadow-lg bg-black border border-emerald-800">

          <!-- Playlist Header -->
          <div class="playlist-header flex items-center justify-between mb-8">
            <a href="/playlist/songs/<%= playlist._id %>" class="text-4xl font-bold text-emerald-500">
              <%= playlist.name %>
            </a>
            <img
              src="<%= playlist.poster ? '/images/picture/' + playlist.poster : '/images/picture/default-image.png' %>"
              alt="<%= playlist.name %> Poster" class="w-32 h-32 object-cover rounded-lg shadow-lg">
          </div>

          <!-- Playlist Owner -->
          <div class="playlist-owner mb-6">
            <h3 class="text-xl font-semibold text-white/70"><span class="text-emerald-500/70">Created By:</span>
              <%= user.username %>
            </h3>
          </div>

          <!-- Timestamps -->
          <div class="playlist-info text-sm text-gray-500 flex items-center justify-between">
            <div>
              <p>Created on: <%= playlist.createdAt.toDateString() %>
              </p>
              <p>Last updated: <%= playlist.updatedAt.toDateString() %>
              </p>
            </div>
            <div class="flex items-center gap-6">
              <div class="edit-playlist text-blue-500 cursor-pointer">Edit</div>
              <a href="/music/allsongs/<%= playlist._id %>" class="text-blue-500">Add songs</a>
            </div>
          </div>
        </div>

        <!-- show edit playlist page after click on edit button -->
        <div class="show-edit-playlist absolute top-0 left-0 w-full h-full hidden">

          <!-- main page -->
          <div class="main-edit-page w-full h-full flex items-center justify-center">
            <div class="bg-[#282828] w-[400px] px-5 py-4 rounded-md flex flex-col items-start gap-4">
              <div class="w-full flex items-center justify-between">
                <h1 class="text-xl font-semibold text-white">
                  Edit Playlist
                </h1>
                <i class="close-edit-playlist ri-close-line text-lg cursor-pointer font-semibold text-white"></i>
              </div>

              <!-- Form -->
              <form action="/playlist/update/<%= playlist._id %>" method="post" enctype="multipart/form-data"
                class="playlist-form w-full flex items-start justify-between">

                <!-- form left-part -->
                <div
                  class="select-playlist select-playlist-left relative drop-shadow-md h-36 w-[40%] flex items-center justify-center rounded">
                  <div
                    class="playlist-edit-menu cursor-pointer hidden absolute z-20 top-1 right-3 text-white rotate-90 px-1 py-1 bg-black/70 rounded-full">
                    <i class="ri-more-2-line"></i>
                  </div>
                  <div
                    class="choose-options select-playlist hidden absolute z-30 flex items-start justify-center flex-col text-sm py-2 rounded -right-[108px] top-10 text-white text-nowrap">
                    <div class="change-image hover:bg-[#3E3E3E] px-4 py-2 cursor-pointer" href=""><i
                        class="ri-file-image-line"></i> &nbsp;
                      Change photo</div>
                    <div class="delete-image hover:bg-[#3E3E3E] px-4 py-2 cursor-pointer" href=""><i
                        class="ri-delete-bin-line"></i> &nbsp;
                      Delete photo
                      &nbsp;</div>
                  </div>
                  <label class="upload-img w-full h-full flex items-center justify-center cursor-pointer" for="image">
                    <img id="uploadedImage"
                      src="<%= playlist.poster ? '/images/picture/' + playlist.poster : '/images/picture/default-image.png' %>"
                      class="uploaded-img z-10 pointer-events-none object-cover" />
                    <div class="img-icon absolute hidden flex items-center flex-col cursor-pointer text-white">
                      <i class="ri-file-image-line text-xl"></i>
                      <div class="text-sm">Choose Image</div>
                    </div>
                  </label>
                  <input class="hidden" type="file" name="image" id="image" accept=".jpg, .jpeg, .png">
                </div>

                <!-- form right-part -->
                <div class="w-[55%] select-playlist h-36 rounded px-3 py-2 flex items-end flex-col justify-between">
                  <div>
                    <label class="text-sm text-white/50" for="playlist-name">Name</label>
                    <input
                      class="w-full mt-2 h-7 rounded-sm bg-[#3E3E3E] text-white text-sm px-2 outline-none border border-[#3E3E3E] focus:border-white/50"
                      type="text" name="name" value="<%= playlist.name %>" id="playlist-name">
                  </div>
                  <input class="bg-white rounded-full px-6 py-1 cursor-pointer" type="submit" value="Save">
                </div>
              </form>
              <p class="img-error-message text-red-500 hidden"></p>
            </div>
          </div>
        </div>
        <% } %>
          <% }) %>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js" +-
    integrity="sha512-7eHRwcbYkK4d9g/6tD/mhkf++eoTHwpNM9woBxtPUBWm67zeAfFC+HrdoE2GanKeocly/VxeLvIqwvCdk7qScg=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>

  <script>
    let uploadImg = document.querySelector(".upload-img");
    let musicIcon = document.querySelector(".music-icon");
    let imgIcon = document.querySelector(".img-icon");
    let deleteImage = document.querySelector(".delete-image");
    let playlistFrom = document.querySelector(".playlist-form");
    let editButtons = document.querySelectorAll(".edit-playlist")
    let showEditPlaylist = document.querySelectorAll(".show-edit-playlist")

    editButtons.forEach((button, idx) => {
      let edit = showEditPlaylist[idx]
      let closeEditPlaylist = edit.querySelector(".close-edit-playlist");
      let selectPlaylistLeft = edit.querySelector(".select-playlist-left");
      let playlistEditMenu = edit.querySelector(".playlist-edit-menu");
      let chooseOptions = edit.querySelector(".choose-options");
      let changeImage = edit.querySelector(".change-image");
      let imageInput = edit.querySelector("#image");
      let uploadedImage = edit.querySelector("#uploadedImage");
      let errorMessage = edit.querySelector(".img-error-message");

      selectPlaylistLeft.addEventListener("mouseenter", function () {
        playlistEditMenu.classList.remove("hidden")
      })
      selectPlaylistLeft.addEventListener("mouseleave", function () {
        playlistEditMenu.classList.add("hidden")
      })

      let flag = true;
      playlistEditMenu.addEventListener("click", function () {
        if (flag) {
          chooseOptions.classList.remove("hidden");
          flag = false;
        } else {
          chooseOptions.classList.add("hidden");
          flag = true;
        }
      });

      button.addEventListener("click", function (e) {
        showEditPlaylist.forEach((elem) => {
          elem.classList.add("hidden")
        })
        edit.classList.remove("hidden")
      })
      closeEditPlaylist.addEventListener("click", function () {
        edit.classList.add("hidden")
      })

      changeImage.addEventListener("click", function () {
        imageInput.click();
      });

      imageInput.addEventListener("change", function (event) {
        console.log(event);

        const file = event.target.files[0];
        console.log(file);

        if (file) {
          const allowedTypes = ["image/jpeg", "image/jpg", "image/png"];
          if (!allowedTypes.includes(file.type)) {
            errorMessage.innerText = "Please upload a JPG, JPEG, or PNG file!";
            errorMessage.classList.remove("hidden");
            imageInput.value = "";
            return;
          }

          if (file.size > 2 * 1024 * 1024) {
            errorMessage.innerText = "File size must be less than 2MB!";
            errorMessage.classList.remove("hidden");
            imageInput.value = "";
            return;
          }

          errorMessage.classList.add("hidden");

          const reader = new FileReader();
          uploadedImage.src = ""
          reader.onload = function (e) {
            console.log(e);

            uploadedImage.src = e.target.result;
            console.log(uploadedImage.classList);
            uploadedImage.classList.add("h-full", "w-full");
            console.log(uploadedImage.classList);
            console.log(uploadedImage);

          };
          reader.readAsDataURL(file);
        }
      });
    })

    // deleteImage.addEventListener("click", function () {
    //   let confirmed = confirm("Are you sure you want to delete this image?");
    //   if (confirmed) {
    //     fetch("/playlist/update", {
    //       method: "POST",
    //       headers: {
    //         "Content-Type": "application/json",
    //       },
    //       body: JSON.stringify({ action: "delete" }),
    //     })
    //       .then((response) => response.json())
    //       .then((data) => {
    //         if (data.success) {
    //           uploadedImage.src = "";
    //           imageInput.value = "";
    //           uploadedImage.classList.remove("h-full", "w-full");
    //         } else {
    //         }
    //       })
    //       .catch((err) => console.error(err));
    //   }
    // });


  </script>
</body>

</html>